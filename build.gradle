plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm'
}

version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    mavenLocal() // Connect from a local repository or via a file
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    modImplementation "ru.airdead:HudRender:1.2.0" // Connect from a local repository or via a file
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}